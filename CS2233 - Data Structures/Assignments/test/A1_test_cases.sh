#!/usr/bin/env bash
#
# Assignment 1 test cases
#
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org/>
#
PASS="\e[042mPASS\e[0m"
FAIL="\e[041mFAIL\e[0m"

test_addition() {
	if [[ `echo ${1} ${2} | ../bin/Assignment_1` -eq $3 ]]; then
		echo -e " . . . ${PASS}"
	else
		echo -e " . . . ${FAIL}"
	fi
}

echo -e "\n>>>>> Testing Assignment 1 <<<<<\n"

printf "Expect 100000000000 + 1 = 100000000001"
test_addition 100000000000 1 100000000001

printf "Expect 999999999999 + 1 = 1000000000000"
test_addition 999999999999 1 1000000000000

printf "Expect 9999896 + 104 = 10000000"
test_addition 9999896 104 10000000

printf "Expect 12345 + 1234567 = 1246912"
test_addition 12345 1234567 1246912

printf "Expect 999999 + 9 = 1000008"
test_addition 999999 9 1000008

printf "Expect 000001 + 2 = 3"
test_addition 000001 2 3

printf "Expect 70000 + 00001 = 70001"
test_addition 70000 00001 70001

printf "Expect 0210 + 00790 = 1000"
test_addition 0210 00790 1000 

printf "Expect 99 + 99 = 198"
test_addition 99 99 198

printf "Expect 2093735362861998056956848202502503493 + 1525540367677989903697009985819398699 = 3619275730539987960653858188321902192" # was 9105956664281002418965568469688603261

test_addition 2093735362861998056956848202502503493 1525540367677989903697009985819398699 3619275730539987960653858188321902192

printf "Expect 0633109266669076056277504 + 8896583127994802613269883649438352912 = 8896583127995435722536552725494630416" # was 9481927267622495683758476250340626348

test_addition 0633109266669076056277504 8896583127994802613269883649438352912 8896583127995435722536552725494630416

printf "Expect 6329373230854696693388775251758686478 + 60421082506281429226696677 = 6329373230915117775895056680985383155" # was 51054191772950505282974181
test_addition 6329373230854696693388775251758686478 60421082506281429226696677 6329373230915117775895056680985383155

printf "Expect 87314256241125 + 1100 = 87314256242225" # was 873142562422258 -- a typo!
test_addition 87314256241125 1100 87314256242225

printf "Expect 567987143257743 + 111118889347652 = 679106032605395"
test_addition 567987143257743 111118889347652 679106032605395

printf "Expect 10 + 8394665544 = 8394665554"
test_addition 10 8394665544 8394665554

printf "Expect 9 + 8 = 17"
test_addition 9 8 17

printf "Expect 46258726276 + 0000663278387897 = 709537114173"
test_addition 46258726276 0000663278387897 709537114173

printf "Expect 00009 + 84 = 93"
test_addition 00009 84 93

printf "Expect 9798689798 + 965785 = 9799655583"
test_addition 9798689798 965785 9799655583

printf "Expect 589 + 125 = 714"
test_addition 589 125 714

printf "Expect 999999999999999999 + 1 = 1000000000000000000"
test_addition 999999999999999999 1 1000000000000000000

printf "Expect 112233445566778899 + 998877665544332211 = 1111111111111111110"
test_addition 112233445566778899 998877665544332211 1111111111111111110

printf "Expect 00500 + 8 = 508"
test_addition 00500 8 508

printf "Expect 999999999999999999 + 999999999999999999 = 1999999999999999998"
test_addition 999999999999999999 999999999999999999 1999999999999999998

printf "Expect 999999 + 0000000000000000001 = 1000000"
test_addition 999999 0000000000000000001 1000000

printf "Expect 5 + 05 = 10"
test_addition 5 05 10

printf "Expect 1000000000000001 + 000001000000000000001 = 2000000000000002"
test_addition 1000000000000001 000001000000000000001 2000000000000002

printf "Expect 0000999999999999999999999999 + 999999999999999999999998 = 1999999999999999999999997"
test_addition 0000999999999999999999999999 999999999999999999999998 1999999999999999999999997

printf "Expect 0000987654321987654321987654321 + 000000098765432198765432198765432 = 1086419754186419754186419753"
test_addition 0000987654321987654321987654321 000000098765432198765432198765432 1086419754186419754186419753

printf "Expect 95866325000252 + 00000000005582000211420 = 101448325211672"
test_addition 95866325000252 00000000005582000211420 101448325211672

printf "Expect 00055869696450000000 + 0099999652000000000000000000000 = 99999652000055869696450000000"
test_addition 00055869696450000000 0099999652000000000000000000000 99999652000055869696450000000

printf "Expect 009 + 00009 = 18"
test_addition 009 00009 18

printf "Expect 999999999 + 00000001 = 1000000000"
test_addition 999999999 00000001 1000000000

printf "Expect 20000000000003 + 0000010000000000003 = 30000000000006"
test_addition 20000000000003 0000010000000000003 30000000000006

printf "Expect 0010000000000 + 0099999999991000000 = 100000009991000000"
test_addition 0010000000000 0099999999991000000 100000009991000000

printf "Expect 900000009 + 900000009 = 1800000018"
test_addition 900000009 900000009 1800000018

echo -e "\n>>>>> Complete <<<<<"
